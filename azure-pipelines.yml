trigger:
- none

resources:
- repo: self

variables:
  imageRepository: 'devsquad-api'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  vmImageName: 'ubuntu-latest'

steps:
- task: Docker@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'cloud-morning-demo'
    azureContainerRegistry: 'acrcloudmorningdemo.azurecr.io'
    action: 'Build an image'
    dockerFile: '**/Dockerfile'
    imageName: '$(Build.Repository.Name):$(Build.BuildId)'
    includeLatestTag: true
- task: Docker@0
  displayName: 'Push a container image'
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'cloud-morning-demo'
    azureContainerRegistry: '{"loginServer":"acrcloudmorningdemo.azurecr.io", "id" : "/subscriptions/d97f0769-0b1e-489c-9217-f5276c2a0016/resourceGroups/rg_cloud-morning-deploy/providers/Microsoft.ContainerRegistry/registries/acrcloudmorningdemo"}'
    action: 'Push an image'
    imageName: '$(Build.Repository.Name):$(Build.BuildId)'
    includeLatestTag: true

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: 'deployments/deployment.yaml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: 'deployments/namespaces.yaml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish Artifacts: drop'    